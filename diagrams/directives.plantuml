@startebnf directives

directive =
	alarm (* starts immediately after exec *) |
	timer (* shows a start/pause/reset button *) |
	event (* like alarm, but for a period *) |
	reference (* links to a file, directory, or URL *);

(* directives *)

alarm =
	"alarm",
	(instant_recurring | instant | duration),
	[comment];

timer =
	"timer",
	duration,
	[comment];

event =
	"event",
	(period_recurring | period),
	[comment];

reference =
	"reference",
	link_target,
	[comment];

(* date time *)

period_recurring =
	period,
	"every", duration (* relative to start of period, must be longer than its duration *),
	["until", instant (* defaults to never *)];

period =
	period_with_duration |
	period_with_end |
	period_whole_day;

period_with_duration =
	instant,
	"for", duration (* relative to start of period *);

period_with_end =
	instant,
	"until", instant;

period_whole_day =
	plain_date,
	"whole day",
	[time_zone (* defaults to local *)];

instant_recurring =
	[instant (* defaults to now *)],
	"every", duration,
	["until", instant (* defaults to never *)];

instant =
	instant_literal |
	instant_later |
	instant_now;

instant_literal =
	plain_date,
	plain_time,
	[time_zone (* defaults to local *)];

instant_later =
	plain_time (* next occurence, either today or tomorrow *),
	[time_zone (* defaults to local *)];

instant_now =
	"now" (* shorthand for today this time *),
	[time_zone (* defaults to local *)];

plain_date =
	plain_date_literal |
	plain_date_keyword;

plain_date_literal =
	[calendar (* default in config, falls back to iso *), "-"],
	unsigned_integer, "-",
	unsigned_integer, "-",
	unsigned_integer;

plain_date_keyword =
	"today" |
	"tomorrow";

calendar =
	"gregory" |
	"islamic" (* Uses Um al-Qura calendar: islamic-umalqura *) |
	"persian" |
	{? [a-zA-Z] ?}-, {"-", {? [a-zA-Z] ?}-};

plain_time =
	plain_time_literal |
	plain_time_of_day |
	plain_time_now;

plain_time_literal =
	unsigned_integer, ":",
	unsigned_integer;

plain_time_of_day =
	"midnight" (* 00:00 *) |
	"noon" (* 12:00 *) |
	"morning" (* configurable, defaults to 8:00 *) |
	"afternoon" (* configurable, defaults to 13:00 *) |
	"evening" (* configurable, defaults to 18:00 *);

plain_time_now =
	"this time";

time_zone =
	time_zone_identifier |
	time_zone_offset (* will not adjust for DST or other time zone changes. *) |
	time_zone_utc;

time_zone_identifier =
	"[",
	{? [a-zA-Z0-9_/+-] ?}-,
	"]";

time_zone_offset =
	number_sign,
	unsigned_integer, ":",
	unsigned_integer;

time_zone_utc =
	"z" |
	"Z";

duration =
	duration_date, [duration_time] |
	duration_time;

duration_date =
	unsigned_integer, duration_years,
	[unsigned_integer, duration_months],
	[unsigned_integer, duration_days] |
	unsigned_integer, duration_months,
	[unsigned_integer, duration_days] |
	unsigned_integer, duration_days;

duration_years =
	"years" |
	"year" |
	"yrs" |
	"yr" |
	"y";

duration_months =
	"months" |
	"month" |
	"mos" |
	"mo";

duration_days =
	"days" |
	"day" |
	"dys" |
	"dy" |
	"d";

duration_time =
	unsigned_integer, duration_hours,
	[unsigned_integer, duration_minutes],
	[unsigned_integer, duration_seconds] |
	unsigned_integer, duration_minutes,
	[unsigned_integer, duration_seconds] |
	unsigned_integer, duration_seconds;

duration_hours =
	"hours" |
	"hour" |
	"hrs" |
	"hr" |
	"h";

duration_minutes =
	"minutes" |
	"minute" |
	"mins" |
	"min" |
	"m";

duration_seconds =
	"seconds" |
	"second" |
	"secs" |
	"sec" |
	"s";

(* primitives *)

string = '"', {string_char}, '"';

string_char =
	"\", ? ["\\/bfnrt] ? |
	"\u", hex_digit, hex_digit, hex_digit, hex_digit |
	? [ !#-[\]-\uFFFF] ?;

hex_digit = ? [0-9a-fA-F] ?;

link_target = "<", {? [^<>\n] ?}-, ">";

signed_integer =
	[number_sign],
	unsigned_integer;

unsigned_integer =
	{? [0-9] ?}-;

number_sign =
	"+" |
	"-";

comment =
	{comment_line}-;

comment_line =
	(
		? \n ?, ? \s ? |
		";"
	),
	{? [^\n] ?};

@endebnf
